//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Group_Project_WebApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Group_Project_Service")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsertypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usertype {
            get {
                return this.UsertypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UsertypeField, value) != true)) {
                    this.UsertypeField = value;
                    this.RaisePropertyChanged("Usertype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Group_Project_Service")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LatestProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageLocation {
            get {
                return this.ImageLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageLocationField, value) != true)) {
                    this.ImageLocationField = value;
                    this.RaisePropertyChanged("ImageLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LatestProduct {
            get {
                return this.LatestProductField;
            }
            set {
                if ((this.LatestProductField.Equals(value) != true)) {
                    this.LatestProductField = value;
                    this.RaisePropertyChanged("LatestProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cart", Namespace="http://schemas.datacontract.org/2004/07/Group_Project_Service")]
    [System.SerializableAttribute()]
    public partial class Cart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productID {
            get {
                return this.productIDField;
            }
            set {
                if ((this.productIDField.Equals(value) != true)) {
                    this.productIDField = value;
                    this.RaisePropertyChanged("productID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/Group_Project_Service")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GrandTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ShippingFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubtotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VATField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> isPaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GrandTotal {
            get {
                return this.GrandTotalField;
            }
            set {
                if ((this.GrandTotalField.Equals(value) != true)) {
                    this.GrandTotalField = value;
                    this.RaisePropertyChanged("GrandTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ShippingFee {
            get {
                return this.ShippingFeeField;
            }
            set {
                if ((this.ShippingFeeField.Equals(value) != true)) {
                    this.ShippingFeeField = value;
                    this.RaisePropertyChanged("ShippingFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Subtotal {
            get {
                return this.SubtotalField;
            }
            set {
                if ((this.SubtotalField.Equals(value) != true)) {
                    this.SubtotalField = value;
                    this.RaisePropertyChanged("Subtotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VAT {
            get {
                return this.VATField;
            }
            set {
                if ((this.VATField.Equals(value) != true)) {
                    this.VATField = value;
                    this.RaisePropertyChanged("VAT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> isPaid {
            get {
                return this.isPaidField;
            }
            set {
                if ((this.isPaidField.Equals(value) != true)) {
                    this.isPaidField = value;
                    this.RaisePropertyChanged("isPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISalonService")]
    public interface ISalonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/Register", ReplyAction="http://tempuri.org/ISalonService/RegisterResponse")]
        bool Register(string Name, string Surname, string Email, string Password, string phoneNo, string Usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/Register", ReplyAction="http://tempuri.org/ISalonService/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string Name, string Surname, string Email, string Password, string phoneNo, string Usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/doesExist", ReplyAction="http://tempuri.org/ISalonService/doesExistResponse")]
        bool doesExist(string Name, string Surname, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/doesExist", ReplyAction="http://tempuri.org/ISalonService/doesExistResponse")]
        System.Threading.Tasks.Task<bool> doesExistAsync(string Name, string Surname, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/UpdateInfo", ReplyAction="http://tempuri.org/ISalonService/UpdateInfoResponse")]
        bool UpdateInfo(int id, string name, string Surname, string email, string phoneNo, string UserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/UpdateInfo", ReplyAction="http://tempuri.org/ISalonService/UpdateInfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateInfoAsync(int id, string name, string Surname, string email, string phoneNo, string UserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/registerStaff", ReplyAction="http://tempuri.org/ISalonService/registerStaffResponse")]
        bool registerStaff(string name, string Surname, string email, string UserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/registerStaff", ReplyAction="http://tempuri.org/ISalonService/registerStaffResponse")]
        System.Threading.Tasks.Task<bool> registerStaffAsync(string name, string Surname, string email, string UserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/SignIn", ReplyAction="http://tempuri.org/ISalonService/SignInResponse")]
        Group_Project_WebApplication.ServiceReference1.User SignIn(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/SignIn", ReplyAction="http://tempuri.org/ISalonService/SignInResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.User> SignInAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getLatestProducts", ReplyAction="http://tempuri.org/ISalonService/getLatestProductsResponse")]
        Group_Project_WebApplication.ServiceReference1.Product[] getLatestProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getLatestProducts", ReplyAction="http://tempuri.org/ISalonService/getLatestProductsResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getLatestProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairApp", ReplyAction="http://tempuri.org/ISalonService/getHairAppResponse")]
        Group_Project_WebApplication.ServiceReference1.Product[] getHairApp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairApp", ReplyAction="http://tempuri.org/ISalonService/getHairAppResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairAppAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairProd", ReplyAction="http://tempuri.org/ISalonService/getHairProdResponse")]
        Group_Project_WebApplication.ServiceReference1.Product[] getHairProd();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairProd", ReplyAction="http://tempuri.org/ISalonService/getHairProdResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairProdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairAcc", ReplyAction="http://tempuri.org/ISalonService/getHairAccResponse")]
        Group_Project_WebApplication.ServiceReference1.Product[] getHairAcc();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairAcc", ReplyAction="http://tempuri.org/ISalonService/getHairAccResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairAccAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getProducts", ReplyAction="http://tempuri.org/ISalonService/getProductsResponse")]
        Group_Project_WebApplication.ServiceReference1.Product[] getProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getProducts", ReplyAction="http://tempuri.org/ISalonService/getProductsResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getProduct", ReplyAction="http://tempuri.org/ISalonService/getProductResponse")]
        Group_Project_WebApplication.ServiceReference1.Product getProduct(int prodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getProduct", ReplyAction="http://tempuri.org/ISalonService/getProductResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product> getProductAsync(int prodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/updateProductQuantity", ReplyAction="http://tempuri.org/ISalonService/updateProductQuantityResponse")]
        void updateProductQuantity(int prodID, int subtractQunatity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/updateProductQuantity", ReplyAction="http://tempuri.org/ISalonService/updateProductQuantityResponse")]
        System.Threading.Tasks.Task updateProductQuantityAsync(int prodID, int subtractQunatity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/updateProductInfo", ReplyAction="http://tempuri.org/ISalonService/updateProductInfoResponse")]
        bool updateProductInfo(int prodID, string prodName, string prodDesc, int prodQuantity, string prodCat, decimal prodPrice, string imgLoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/updateProductInfo", ReplyAction="http://tempuri.org/ISalonService/updateProductInfoResponse")]
        System.Threading.Tasks.Task<bool> updateProductInfoAsync(int prodID, string prodName, string prodDesc, int prodQuantity, string prodCat, decimal prodPrice, string imgLoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/removeProduct", ReplyAction="http://tempuri.org/ISalonService/removeProductResponse")]
        bool removeProduct(int prodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/removeProduct", ReplyAction="http://tempuri.org/ISalonService/removeProductResponse")]
        System.Threading.Tasks.Task<bool> removeProductAsync(int prodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/addProduct", ReplyAction="http://tempuri.org/ISalonService/addProductResponse")]
        bool addProduct(string prodName, string prodDesc, decimal prodPrice, string imgLoc, int prodQuantity, string Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/addProduct", ReplyAction="http://tempuri.org/ISalonService/addProductResponse")]
        System.Threading.Tasks.Task<bool> addProductAsync(string prodName, string prodDesc, decimal prodPrice, string imgLoc, int prodQuantity, string Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/addToCart", ReplyAction="http://tempuri.org/ISalonService/addToCartResponse")]
        void addToCart(int userID, int prodID, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/addToCart", ReplyAction="http://tempuri.org/ISalonService/addToCartResponse")]
        System.Threading.Tasks.Task addToCartAsync(int userID, int prodID, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/isInCart", ReplyAction="http://tempuri.org/ISalonService/isInCartResponse")]
        bool isInCart(int userID, int prodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/isInCart", ReplyAction="http://tempuri.org/ISalonService/isInCartResponse")]
        System.Threading.Tasks.Task<bool> isInCartAsync(int userID, int prodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getCartItems", ReplyAction="http://tempuri.org/ISalonService/getCartItemsResponse")]
        Group_Project_WebApplication.ServiceReference1.Cart[] getCartItems(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getCartItems", ReplyAction="http://tempuri.org/ISalonService/getCartItemsResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Cart[]> getCartItemsAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/removeFromCart", ReplyAction="http://tempuri.org/ISalonService/removeFromCartResponse")]
        void removeFromCart(int userID, int prodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/removeFromCart", ReplyAction="http://tempuri.org/ISalonService/removeFromCartResponse")]
        System.Threading.Tasks.Task removeFromCartAsync(int userID, int prodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/editCartQuantity", ReplyAction="http://tempuri.org/ISalonService/editCartQuantityResponse")]
        void editCartQuantity(int userID, int prodID, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/editCartQuantity", ReplyAction="http://tempuri.org/ISalonService/editCartQuantityResponse")]
        System.Threading.Tasks.Task editCartQuantityAsync(int userID, int prodID, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/clearCart", ReplyAction="http://tempuri.org/ISalonService/clearCartResponse")]
        void clearCart(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/clearCart", ReplyAction="http://tempuri.org/ISalonService/clearCartResponse")]
        System.Threading.Tasks.Task clearCartAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/addInvoice", ReplyAction="http://tempuri.org/ISalonService/addInvoiceResponse")]
        int addInvoice(int userID, string Products, double Subtotal, double VAT, double Discount, double Shipping, double GrandTotal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/addInvoice", ReplyAction="http://tempuri.org/ISalonService/addInvoiceResponse")]
        System.Threading.Tasks.Task<int> addInvoiceAsync(int userID, string Products, double Subtotal, double VAT, double Discount, double Shipping, double GrandTotal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getInvoice", ReplyAction="http://tempuri.org/ISalonService/getInvoiceResponse")]
        Group_Project_WebApplication.ServiceReference1.Invoice getInvoice(int invoiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getInvoice", ReplyAction="http://tempuri.org/ISalonService/getInvoiceResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Invoice> getInvoiceAsync(int invoiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getUserInvoice", ReplyAction="http://tempuri.org/ISalonService/getUserInvoiceResponse")]
        Group_Project_WebApplication.ServiceReference1.Invoice[] getUserInvoice(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getUserInvoice", ReplyAction="http://tempuri.org/ISalonService/getUserInvoiceResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Invoice[]> getUserInvoiceAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/doesInvoiceExist", ReplyAction="http://tempuri.org/ISalonService/doesInvoiceExistResponse")]
        bool doesInvoiceExist(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/doesInvoiceExist", ReplyAction="http://tempuri.org/ISalonService/doesInvoiceExistResponse")]
        System.Threading.Tasks.Task<bool> doesInvoiceExistAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/updateUnpaidInvoice", ReplyAction="http://tempuri.org/ISalonService/updateUnpaidInvoiceResponse")]
        int updateUnpaidInvoice(int userID, string Products, double Subtotal, double VAT, double Discount, double Shipping, double GrandTotal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/updateUnpaidInvoice", ReplyAction="http://tempuri.org/ISalonService/updateUnpaidInvoiceResponse")]
        System.Threading.Tasks.Task<int> updateUnpaidInvoiceAsync(int userID, string Products, double Subtotal, double VAT, double Discount, double Shipping, double GrandTotal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/paidInvoice", ReplyAction="http://tempuri.org/ISalonService/paidInvoiceResponse")]
        void paidInvoice(int invoiceID, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/paidInvoice", ReplyAction="http://tempuri.org/ISalonService/paidInvoiceResponse")]
        System.Threading.Tasks.Task paidInvoiceAsync(int invoiceID, string Address);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalonServiceChannel : Group_Project_WebApplication.ServiceReference1.ISalonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalonServiceClient : System.ServiceModel.ClientBase<Group_Project_WebApplication.ServiceReference1.ISalonService>, Group_Project_WebApplication.ServiceReference1.ISalonService {
        
        public SalonServiceClient() {
        }
        
        public SalonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string Name, string Surname, string Email, string Password, string phoneNo, string Usertype) {
            return base.Channel.Register(Name, Surname, Email, Password, phoneNo, Usertype);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string Name, string Surname, string Email, string Password, string phoneNo, string Usertype) {
            return base.Channel.RegisterAsync(Name, Surname, Email, Password, phoneNo, Usertype);
        }
        
        public bool doesExist(string Name, string Surname, string Email) {
            return base.Channel.doesExist(Name, Surname, Email);
        }
        
        public System.Threading.Tasks.Task<bool> doesExistAsync(string Name, string Surname, string Email) {
            return base.Channel.doesExistAsync(Name, Surname, Email);
        }
        
        public bool UpdateInfo(int id, string name, string Surname, string email, string phoneNo, string UserType) {
            return base.Channel.UpdateInfo(id, name, Surname, email, phoneNo, UserType);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInfoAsync(int id, string name, string Surname, string email, string phoneNo, string UserType) {
            return base.Channel.UpdateInfoAsync(id, name, Surname, email, phoneNo, UserType);
        }
        
        public bool registerStaff(string name, string Surname, string email, string UserType) {
            return base.Channel.registerStaff(name, Surname, email, UserType);
        }
        
        public System.Threading.Tasks.Task<bool> registerStaffAsync(string name, string Surname, string email, string UserType) {
            return base.Channel.registerStaffAsync(name, Surname, email, UserType);
        }
        
        public Group_Project_WebApplication.ServiceReference1.User SignIn(string Email, string Password) {
            return base.Channel.SignIn(Email, Password);
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.User> SignInAsync(string Email, string Password) {
            return base.Channel.SignInAsync(Email, Password);
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product[] getLatestProducts() {
            return base.Channel.getLatestProducts();
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getLatestProductsAsync() {
            return base.Channel.getLatestProductsAsync();
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product[] getHairApp() {
            return base.Channel.getHairApp();
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairAppAsync() {
            return base.Channel.getHairAppAsync();
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product[] getHairProd() {
            return base.Channel.getHairProd();
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairProdAsync() {
            return base.Channel.getHairProdAsync();
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product[] getHairAcc() {
            return base.Channel.getHairAcc();
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairAccAsync() {
            return base.Channel.getHairAccAsync();
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product[] getProducts() {
            return base.Channel.getProducts();
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getProductsAsync() {
            return base.Channel.getProductsAsync();
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product getProduct(int prodID) {
            return base.Channel.getProduct(prodID);
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product> getProductAsync(int prodID) {
            return base.Channel.getProductAsync(prodID);
        }
        
        public void updateProductQuantity(int prodID, int subtractQunatity) {
            base.Channel.updateProductQuantity(prodID, subtractQunatity);
        }
        
        public System.Threading.Tasks.Task updateProductQuantityAsync(int prodID, int subtractQunatity) {
            return base.Channel.updateProductQuantityAsync(prodID, subtractQunatity);
        }
        
        public bool updateProductInfo(int prodID, string prodName, string prodDesc, int prodQuantity, string prodCat, decimal prodPrice, string imgLoc) {
            return base.Channel.updateProductInfo(prodID, prodName, prodDesc, prodQuantity, prodCat, prodPrice, imgLoc);
        }
        
        public System.Threading.Tasks.Task<bool> updateProductInfoAsync(int prodID, string prodName, string prodDesc, int prodQuantity, string prodCat, decimal prodPrice, string imgLoc) {
            return base.Channel.updateProductInfoAsync(prodID, prodName, prodDesc, prodQuantity, prodCat, prodPrice, imgLoc);
        }
        
        public bool removeProduct(int prodID) {
            return base.Channel.removeProduct(prodID);
        }
        
        public System.Threading.Tasks.Task<bool> removeProductAsync(int prodID) {
            return base.Channel.removeProductAsync(prodID);
        }
        
        public bool addProduct(string prodName, string prodDesc, decimal prodPrice, string imgLoc, int prodQuantity, string Category) {
            return base.Channel.addProduct(prodName, prodDesc, prodPrice, imgLoc, prodQuantity, Category);
        }
        
        public System.Threading.Tasks.Task<bool> addProductAsync(string prodName, string prodDesc, decimal prodPrice, string imgLoc, int prodQuantity, string Category) {
            return base.Channel.addProductAsync(prodName, prodDesc, prodPrice, imgLoc, prodQuantity, Category);
        }
        
        public void addToCart(int userID, int prodID, int Quantity) {
            base.Channel.addToCart(userID, prodID, Quantity);
        }
        
        public System.Threading.Tasks.Task addToCartAsync(int userID, int prodID, int Quantity) {
            return base.Channel.addToCartAsync(userID, prodID, Quantity);
        }
        
        public bool isInCart(int userID, int prodID) {
            return base.Channel.isInCart(userID, prodID);
        }
        
        public System.Threading.Tasks.Task<bool> isInCartAsync(int userID, int prodID) {
            return base.Channel.isInCartAsync(userID, prodID);
        }
        
        public Group_Project_WebApplication.ServiceReference1.Cart[] getCartItems(int userID) {
            return base.Channel.getCartItems(userID);
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Cart[]> getCartItemsAsync(int userID) {
            return base.Channel.getCartItemsAsync(userID);
        }
        
        public void removeFromCart(int userID, int prodID) {
            base.Channel.removeFromCart(userID, prodID);
        }
        
        public System.Threading.Tasks.Task removeFromCartAsync(int userID, int prodID) {
            return base.Channel.removeFromCartAsync(userID, prodID);
        }
        
        public void editCartQuantity(int userID, int prodID, int Quantity) {
            base.Channel.editCartQuantity(userID, prodID, Quantity);
        }
        
        public System.Threading.Tasks.Task editCartQuantityAsync(int userID, int prodID, int Quantity) {
            return base.Channel.editCartQuantityAsync(userID, prodID, Quantity);
        }
        
        public void clearCart(int userID) {
            base.Channel.clearCart(userID);
        }
        
        public System.Threading.Tasks.Task clearCartAsync(int userID) {
            return base.Channel.clearCartAsync(userID);
        }
        
        public int addInvoice(int userID, string Products, double Subtotal, double VAT, double Discount, double Shipping, double GrandTotal) {
            return base.Channel.addInvoice(userID, Products, Subtotal, VAT, Discount, Shipping, GrandTotal);
        }
        
        public System.Threading.Tasks.Task<int> addInvoiceAsync(int userID, string Products, double Subtotal, double VAT, double Discount, double Shipping, double GrandTotal) {
            return base.Channel.addInvoiceAsync(userID, Products, Subtotal, VAT, Discount, Shipping, GrandTotal);
        }
        
        public Group_Project_WebApplication.ServiceReference1.Invoice getInvoice(int invoiceID) {
            return base.Channel.getInvoice(invoiceID);
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Invoice> getInvoiceAsync(int invoiceID) {
            return base.Channel.getInvoiceAsync(invoiceID);
        }
        
        public Group_Project_WebApplication.ServiceReference1.Invoice[] getUserInvoice(int userID) {
            return base.Channel.getUserInvoice(userID);
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Invoice[]> getUserInvoiceAsync(int userID) {
            return base.Channel.getUserInvoiceAsync(userID);
        }
        
        public bool doesInvoiceExist(int userID) {
            return base.Channel.doesInvoiceExist(userID);
        }
        
        public System.Threading.Tasks.Task<bool> doesInvoiceExistAsync(int userID) {
            return base.Channel.doesInvoiceExistAsync(userID);
        }
        
        public int updateUnpaidInvoice(int userID, string Products, double Subtotal, double VAT, double Discount, double Shipping, double GrandTotal) {
            return base.Channel.updateUnpaidInvoice(userID, Products, Subtotal, VAT, Discount, Shipping, GrandTotal);
        }
        
        public System.Threading.Tasks.Task<int> updateUnpaidInvoiceAsync(int userID, string Products, double Subtotal, double VAT, double Discount, double Shipping, double GrandTotal) {
            return base.Channel.updateUnpaidInvoiceAsync(userID, Products, Subtotal, VAT, Discount, Shipping, GrandTotal);
        }
        
        public void paidInvoice(int invoiceID, string Address) {
            base.Channel.paidInvoice(invoiceID, Address);
        }
        
        public System.Threading.Tasks.Task paidInvoiceAsync(int invoiceID, string Address) {
            return base.Channel.paidInvoiceAsync(invoiceID, Address);
        }
    }
}
