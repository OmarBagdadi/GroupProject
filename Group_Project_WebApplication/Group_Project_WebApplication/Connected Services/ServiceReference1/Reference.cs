//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Group_Project_WebApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Group_Project_Service")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsertypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usertype {
            get {
                return this.UsertypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UsertypeField, value) != true)) {
                    this.UsertypeField = value;
                    this.RaisePropertyChanged("Usertype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Group_Project_Service")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LatestProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageLocation {
            get {
                return this.ImageLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageLocationField, value) != true)) {
                    this.ImageLocationField = value;
                    this.RaisePropertyChanged("ImageLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LatestProduct {
            get {
                return this.LatestProductField;
            }
            set {
                if ((this.LatestProductField.Equals(value) != true)) {
                    this.LatestProductField = value;
                    this.RaisePropertyChanged("LatestProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISalonService")]
    public interface ISalonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/Register", ReplyAction="http://tempuri.org/ISalonService/RegisterResponse")]
        bool Register(string Name, string Surname, string Email, string Password, string phoneNo, string Usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/Register", ReplyAction="http://tempuri.org/ISalonService/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string Name, string Surname, string Email, string Password, string phoneNo, string Usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/doesExist", ReplyAction="http://tempuri.org/ISalonService/doesExistResponse")]
        bool doesExist(string Name, string Surname, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/doesExist", ReplyAction="http://tempuri.org/ISalonService/doesExistResponse")]
        System.Threading.Tasks.Task<bool> doesExistAsync(string Name, string Surname, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/UpdateInfo", ReplyAction="http://tempuri.org/ISalonService/UpdateInfoResponse")]
        bool UpdateInfo(int id, string name, string Surname, string email, string phoneNo, string UserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/UpdateInfo", ReplyAction="http://tempuri.org/ISalonService/UpdateInfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateInfoAsync(int id, string name, string Surname, string email, string phoneNo, string UserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/registerStaff", ReplyAction="http://tempuri.org/ISalonService/registerStaffResponse")]
        bool registerStaff(string name, string Surname, string email, string UserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/registerStaff", ReplyAction="http://tempuri.org/ISalonService/registerStaffResponse")]
        System.Threading.Tasks.Task<bool> registerStaffAsync(string name, string Surname, string email, string UserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/SignIn", ReplyAction="http://tempuri.org/ISalonService/SignInResponse")]
        Group_Project_WebApplication.ServiceReference1.User SignIn(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/SignIn", ReplyAction="http://tempuri.org/ISalonService/SignInResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.User> SignInAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getLatestProducts", ReplyAction="http://tempuri.org/ISalonService/getLatestProductsResponse")]
        Group_Project_WebApplication.ServiceReference1.Product[] getLatestProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getLatestProducts", ReplyAction="http://tempuri.org/ISalonService/getLatestProductsResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getLatestProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairApp", ReplyAction="http://tempuri.org/ISalonService/getHairAppResponse")]
        Group_Project_WebApplication.ServiceReference1.Product[] getHairApp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairApp", ReplyAction="http://tempuri.org/ISalonService/getHairAppResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairAppAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairProd", ReplyAction="http://tempuri.org/ISalonService/getHairProdResponse")]
        Group_Project_WebApplication.ServiceReference1.Product[] getHairProd();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairProd", ReplyAction="http://tempuri.org/ISalonService/getHairProdResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairProdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairAcc", ReplyAction="http://tempuri.org/ISalonService/getHairAccResponse")]
        Group_Project_WebApplication.ServiceReference1.Product[] getHairAcc();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getHairAcc", ReplyAction="http://tempuri.org/ISalonService/getHairAccResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairAccAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getProducts", ReplyAction="http://tempuri.org/ISalonService/getProductsResponse")]
        Group_Project_WebApplication.ServiceReference1.Product[] getProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getProducts", ReplyAction="http://tempuri.org/ISalonService/getProductsResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getProduct", ReplyAction="http://tempuri.org/ISalonService/getProductResponse")]
        Group_Project_WebApplication.ServiceReference1.Product getProduct(int prodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/getProduct", ReplyAction="http://tempuri.org/ISalonService/getProductResponse")]
        System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product> getProductAsync(int prodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/updateProductInfo", ReplyAction="http://tempuri.org/ISalonService/updateProductInfoResponse")]
        bool updateProductInfo(int prodID, string prodName, string prodDesc, int prodQuantity, decimal prodPrice, string imgLoc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/updateProductInfo", ReplyAction="http://tempuri.org/ISalonService/updateProductInfoResponse")]
        System.Threading.Tasks.Task<bool> updateProductInfoAsync(int prodID, string prodName, string prodDesc, int prodQuantity, decimal prodPrice, string imgLoc);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalonServiceChannel : Group_Project_WebApplication.ServiceReference1.ISalonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalonServiceClient : System.ServiceModel.ClientBase<Group_Project_WebApplication.ServiceReference1.ISalonService>, Group_Project_WebApplication.ServiceReference1.ISalonService {
        
        public SalonServiceClient() {
        }
        
        public SalonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string Name, string Surname, string Email, string Password, string phoneNo, string Usertype) {
            return base.Channel.Register(Name, Surname, Email, Password, phoneNo, Usertype);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string Name, string Surname, string Email, string Password, string phoneNo, string Usertype) {
            return base.Channel.RegisterAsync(Name, Surname, Email, Password, phoneNo, Usertype);
        }
        
        public bool doesExist(string Name, string Surname, string Email) {
            return base.Channel.doesExist(Name, Surname, Email);
        }
        
        public System.Threading.Tasks.Task<bool> doesExistAsync(string Name, string Surname, string Email) {
            return base.Channel.doesExistAsync(Name, Surname, Email);
        }
        
        public bool UpdateInfo(int id, string name, string Surname, string email, string phoneNo, string UserType) {
            return base.Channel.UpdateInfo(id, name, Surname, email, phoneNo, UserType);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInfoAsync(int id, string name, string Surname, string email, string phoneNo, string UserType) {
            return base.Channel.UpdateInfoAsync(id, name, Surname, email, phoneNo, UserType);
        }
        
        public bool registerStaff(string name, string Surname, string email, string UserType) {
            return base.Channel.registerStaff(name, Surname, email, UserType);
        }
        
        public System.Threading.Tasks.Task<bool> registerStaffAsync(string name, string Surname, string email, string UserType) {
            return base.Channel.registerStaffAsync(name, Surname, email, UserType);
        }
        
        public Group_Project_WebApplication.ServiceReference1.User SignIn(string Email, string Password) {
            return base.Channel.SignIn(Email, Password);
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.User> SignInAsync(string Email, string Password) {
            return base.Channel.SignInAsync(Email, Password);
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product[] getLatestProducts() {
            return base.Channel.getLatestProducts();
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getLatestProductsAsync() {
            return base.Channel.getLatestProductsAsync();
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product[] getHairApp() {
            return base.Channel.getHairApp();
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairAppAsync() {
            return base.Channel.getHairAppAsync();
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product[] getHairProd() {
            return base.Channel.getHairProd();
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairProdAsync() {
            return base.Channel.getHairProdAsync();
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product[] getHairAcc() {
            return base.Channel.getHairAcc();
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getHairAccAsync() {
            return base.Channel.getHairAccAsync();
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product[] getProducts() {
            return base.Channel.getProducts();
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product[]> getProductsAsync() {
            return base.Channel.getProductsAsync();
        }
        
        public Group_Project_WebApplication.ServiceReference1.Product getProduct(int prodID) {
            return base.Channel.getProduct(prodID);
        }
        
        public System.Threading.Tasks.Task<Group_Project_WebApplication.ServiceReference1.Product> getProductAsync(int prodID) {
            return base.Channel.getProductAsync(prodID);
        }
        
        public bool updateProductInfo(int prodID, string prodName, string prodDesc, int prodQuantity, decimal prodPrice, string imgLoc) {
            return base.Channel.updateProductInfo(prodID, prodName, prodDesc, prodQuantity, prodPrice, imgLoc);
        }
        
        public System.Threading.Tasks.Task<bool> updateProductInfoAsync(int prodID, string prodName, string prodDesc, int prodQuantity, decimal prodPrice, string imgLoc) {
            return base.Channel.updateProductInfoAsync(prodID, prodName, prodDesc, prodQuantity, prodPrice, imgLoc);
        }
    }
}
